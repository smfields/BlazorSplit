@using System.ComponentModel
@using System.Text
@using BlazorSplit.OptionTypes
<section aria-labelledby="section-1-title">
    <h2 class="sr-only" id="section-1-title">Split.js</h2>
    <div class="rounded-lg bg-white overflow-hidden shadow p-4">
        <div class="border-4 border-dashed border-gray-200 rounded-lg h-64">
            <Split 
                Class="@GetSplitClass()"
                Direction="Configuration.Direction"
                MinSize="Configuration.MinimumSize"
                MaxSize="Configuration.MaximumSize"
                GutterSize="Configuration.GutterSize"
                GutterAlign="Configuration.GutterAlignment"
                SnapOffset="Configuration.SnapOffset"
                DragInterval="Configuration.DragInterval"
            >
                @for (int i = 0; i < Configuration.Columns; i++)
                {
                    <SplitSection></SplitSection>
                }
            </Split>
        </div>
    </div>
</section>

@code {

    [Parameter]
    public PreviewConfiguration Configuration { get; set; }

    protected override void OnInitialized()
    {
        void OnPropertyChanged(object? sender, PropertyChangedEventArgs e)
        {
            StateHasChanged();
        }

        Configuration.PropertyChanged += OnPropertyChanged;
    }

    private string GetSplitClass()
    {
        StringBuilder className = new StringBuilder("split");

        if (Configuration.Direction == Direction.Horizontal)
        {
            switch (Configuration.HorizontalLayout)
            {
                case PreviewConfiguration.CssHorizontalLayout.Flex:
                    className.Append(" flex");
                    break;
                case PreviewConfiguration.CssHorizontalLayout.Float:
                    className.Append(" float");
                    break;
            }
        }

        return className.ToString();
    }

}